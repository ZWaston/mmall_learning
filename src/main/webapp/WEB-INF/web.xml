<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
         id="WebApp_ID" version="2.5">

    <display-name>Archetype Created Web Application</display-name>

    <!-- Spring过滤器配置，转码用的，拦截的请求是/*，表明所有的请求都被拦截，然后进入过滤器CharacterEncodingFilter，这样自己就不用写转utf-8的代码了-->
    <filter>
        <filter-name>characterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <!--/*表明所有的请求都会拦截-->
        <filter-name>characterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>


    <!-- web容器启动和关闭的监听器 -->
    <listener>
        <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
    </listener>

    <!-- 将web容器和spring容器整合的一个监听器-->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <!--ContextLoaderListener通过applicationContext.xml文件将web容器和spring容器整合-->
        <param-value>
            classpath:applicationContext.xml
        </param-value>
    </context-param>

    <!--配置Spring mvc的一个配置，dispatcher拦截的是*.do，都会被SpringMVC拦截-->
    <servlet>
        <servlet-name>dispatcher</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <!--默认就是/WEB-INF/dispatcher-servlet.xml，如果需要改文件名字，可以在这里更改-->
            <param-value>/WEB-INF/dispatcher-servlet.xml</param-value>
        </init-param>
        <!-- >=0时，会初始化DispatcherServlet，调用它的init方法；否则，只有选择被使用时，才会加载-->
        <load-on-startup>1</load-on-startup>
    </servlet>



    <servlet-mapping>
        <servlet-name>dispatcher</servlet-name>
        <url-pattern>*.do</url-pattern>
    </servlet-mapping>

</web-app>

